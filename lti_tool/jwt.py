from secrets import token_hex

from jwcrypto import jwt


def bearer_jwt(platform):
    claims = {
        # NOTE iss seems not to be checked by moodle. But may be important
        # for other platforms.
        "iss": "localhost",
        "sub": platform.client_id,
        "aud": [platform.access_token_url],
    }

    # None values will be generated by jwcrypto
    default_claims = {"iat": None, "exp": None, "jti": None}

    return _tokenize(platform, claims, default_claims)


def form_jwt(platform, extra_claims=None):
    claims = {"iss": platform.client_id, "aud": platform.issuer, "nonce": token_hex()}

    if extra_claims:
        claims.update(extra_claims)

    # None values will be generated by jwcrypto
    default_claims = {"iat": None, "exp": None}

    return _tokenize(platform, claims, default_claims)


def _tokenize(platform, claims, default_claims):
    header = {"alg": "RS256", "type": "JWT", "kid": platform.key.kid}

    token = jwt.JWT(header=header, claims=claims, default_claims=default_claims)

    token.make_signed_token(platform.key.jwk)
    return token.serialize()
